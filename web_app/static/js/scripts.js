function customAlert(e, r) { var t = document.querySelector(".alert-container"), l = document.querySelector(".alert-msg"); t.classList.add(r), l.innerHTML = e, t.style.display = "block", setTimeout(function () { t.style.display = "none", t.classList.remove(r), l.innerHTML = "" }, 1e4) } function clearImage() { document.getElementById("formFile").value = "", frame.src = "/images/profiles/default.jpg" } function signIn() { document.querySelector(".signin-btn").setAttribute("disabled", ""), document.querySelector(".spinner").style.display = "flex"; let e = document.querySelector(".username").value, r = document.querySelector(".password").value; fetch("/check/signin/", { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: new URLSearchParams({ username: e, password: r }) }).then(e => e.text()).then(e => { "false" == e ? (customAlert("Login failed! Please check your credentials.", "alert-warning"), document.querySelector(".signin-btn").removeAttribute("disabled"), document.querySelector(".spinner").style.display = "none") : document.querySelector(".signin-form").submit() }) } function accountTypeCheck() { let e = document.getElementsByName("accounttype"); for (i = 0; i < e.length; i++)if (e[i].checked) return !0; return !1 } function signUpEditName() { let e = document.querySelector(".name"); "" == e.value.length || e.value.length > 255 ? (document.querySelector(".name-danger").style.display = "block", document.querySelector(".signup-btn").setAttribute("disabled", "")) : (document.querySelector(".name-danger").style.display = "none", "none" == document.querySelector(".username-danger").style.display & "none" == document.querySelector(".password-danger").style.display & "none" == document.querySelector(".confirm-password-danger").style.display && !0 == accountTypeCheck() && document.querySelector(".signup-btn").removeAttribute("disabled")) } function signUpEditUsername() { let e = document.querySelector(".username"); e.value.length < 4 || e.value.length > 25 || !/^[a-zA-Z0-9]+$/.test(e.value) ? (document.querySelector(".username-danger").style.display = "block", document.querySelector(".signup-btn").setAttribute("disabled", "")) : (document.querySelector(".username-danger").style.display = "none", "none" == document.querySelector(".name-danger").style.display & "none" == document.querySelector(".password-danger").style.display & "none" == document.querySelector(".confirm-password-danger").style.display && !0 == accountTypeCheck() && document.querySelector(".signup-btn").removeAttribute("disabled")) } function signUpEditPassword() { let e = document.querySelector(".password"), r = document.querySelector(".confirm-password"); /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,255}$/.test(e.value) ? e.value != r.value ? (document.querySelector(".password-danger").style.display = "none", document.querySelector(".confirm-password-danger").style.display = "block", document.querySelector(".signup-btn").setAttribute("disabled", "")) : (document.querySelector(".password-danger").style.display = "none", document.querySelector(".confirm-password-danger").style.display = "none", "none" == document.querySelector(".name-danger").style.display & "none" == document.querySelector(".username-danger").style.display & "none" == document.querySelector(".confirm-password-danger").style.display && !0 == accountTypeCheck() && document.querySelector(".signup-btn").removeAttribute("disabled")) : (document.querySelector(".password-danger").style.display = "block", document.querySelector(".signup-btn").setAttribute("disabled", "")) } function signUpConfirmPassword() { let e = document.querySelector(".password"), r = document.querySelector(".confirm-password"); e.value != r.value ? (document.querySelector(".confirm-password-danger").style.display = "block", document.querySelector(".signup-btn").setAttribute("disabled", "")) : (document.querySelector(".confirm-password-danger").style.display = "none", "none" == document.querySelector(".name-danger").style.display & "none" == document.querySelector(".username-danger").style.display & "none" == document.querySelector(".password-danger").style.display && !0 == accountTypeCheck() && document.querySelector(".signup-btn").removeAttribute("disabled")) } function signUpEditType() { document.querySelector(".signup-btn").setAttribute("disabled", ""), !0 == accountTypeCheck() && "none" == document.querySelector(".name-danger").style.display & "none" == document.querySelector(".username-danger").style.display & "none" == document.querySelector(".password-danger").style.display & "none" == document.querySelector(".confirm-password-danger").style.display && document.querySelector(".signup-btn").removeAttribute("disabled") } function signInEdit() { document.querySelector(".signin-btn").setAttribute("disabled", ""), document.querySelector(".username").value.length > 0 & document.querySelector(".password").value.length > 0 && document.querySelector(".signin-btn").removeAttribute("disabled") } function signUp() { document.querySelector(".signup-btn").setAttribute("disabled", ""), document.querySelector(".spinner").style.display = "flex"; let e = document.querySelector(".username").value; fetch("/check/signup/", { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: new URLSearchParams({ username: e }) }).then(e => e.text()).then(e => { "true" == e ? (customAlert("Username is already used, please try another username.", "alert-warning"), document.querySelector(".signup-btn").removeAttribute("disabled"), document.querySelector(".spinner").style.display = "none") : document.querySelector(".signup-form").submit() }) } function changeLargeImg(e) { (largeImage = document.querySelector(".large-image")).src = e.src } function doFetch(e, r, t, l = !1) { if (!(t <= 0)) return fetch("/cart/" + e + "/" + r + "/quantity/" + t, { method: "POST" }).then(function (e) { !0 == l && location.reload() }).catch(function (e) { console.log(`Error: ${e}`) }) } function updateCartCount() { var e = document.querySelector(".cart-count"); parseInt(e.innerHTML.trim()) - 1 >= 0 && (e.innerHTML = parseInt(e.innerHTML.trim()) - 1) } function editQuantity(e, r, t, l = !1, a = !1) { var o = document.querySelector(".pd-quantity-input-box-" + e), n = document.querySelector(".pd-stock-" + e), c = null, s = !1; if ("add" == r) { if (parseInt(o.value) < parseInt(n.innerHTML.trim())) o.value = parseInt(o.value) + parseInt(t), c = t; else { customAlert("You cannot add more than the available stock.", "alert-warning"); return } } else if ("remove" == r) { if ("all" == t) s = !0; else { if (!a & "1" == o.value && (updateCartCount(), s = !0), a & "1" == o.value) return; o.value = parseInt(o.value) - parseInt(t) } c = t } else if ("edit" == r) { if (parseInt(o.value) > parseInt(o.oldvalue)) { let u = parseInt(o.value) - parseInt(o.oldvalue); var r = "add"; c = u, parseInt(o.value) > parseInt(n.innerHTML.trim()) && (o.value = n.innerHTML.trim(), customAlert("You cannot add more than the available stock.", "alert-warning"), c = parseInt(n.innerHTML.trim()) - parseInt(o.oldvalue)) } else if (parseInt(o.value) < parseInt(o.oldvalue)) { let d = parseInt(o.oldvalue) - parseInt(o.value); var r = "remove"; updateCartCount(), s = !0, c = d } } l || doFetch(r, e, c, s); try { let y = parseFloat(document.querySelector(".pd-price-" + e).innerHTML.trim()), p = parseFloat(o.value) * y; document.querySelector(".pd-total-price-" + e).innerHTML = p.toFixed(2); let m = document.querySelector(".pd-checkbox-" + e); if (m.checked) { var v = document.querySelector(".total-price"); if ("add" == r) v.innerHTML = (parseFloat(v.innerHTML.trim()) + c * y).toFixed(2); else if ("remove" == r) { let f = (parseFloat(v.innerHTML.trim()) - c * y).toFixed(2); f <= 0 || "NaN" == f ? v.innerHTML = 0 : v.innerHTML = f } } } catch (h) { "TypeError" != h.name && console.log(h) } } function addToCart(e, r = !1) { var t, l = 1; r && (l = document.querySelector(".pd-quantity-input-box-" + e).value), Promise.all([fetch("/cart/add/" + e + "/quantity/" + l, { method: "POST" }), new Promise(function (e) { try { var r = document.querySelector(".add-cart-btn"); r.classList.add("clicked"), setTimeout(function () { r.classList.remove("clicked") }, 2500), e() } catch { e() } })]).then(function (e) { var r = e[0]; r.ok && r.json().then(function (e) { if (e.cart_plus) { var r = document.querySelector(".cart-count"); r.innerHTML = parseInt(r.innerHTML.trim()) + 1 } else e.signin && (window.location.href = "/signin") }) }) } function checkOutProduct(e) { let r = document.querySelector(".pd-quantity-input-box-" + e).value; document.querySelector(".checkout-quantity").value = r, document.querySelector(".checkout-form").submit() } function selectOne(e) { let r = document.querySelector(".pd-checkbox-" + e); var t = document.querySelector(".checkout-pd-ids"), l = parseFloat(document.querySelector(".pd-price-" + e).innerHTML.trim()), a = parseInt(document.querySelector(".pd-quantity-input-box-" + e).value), o = document.querySelector(".total-price"); if (r.checked) { t.value.includes(e) || (t.value = t.value + e + ","), document.querySelector(".checkout-btn").removeAttribute("disabled"), o.innerHTML = (parseFloat(o.innerHTML.trim()) + l * a).toFixed(2); var n = !1, c = document.querySelectorAll(".product-checkbox"); for (i = 0; i < c.length && c[i].checked; i++)i == c.length - 1 && (n = !0); n ? (document.querySelector(".select-all").checked = !0, document.querySelector(".checkout-mode").value = "all") : document.querySelector(".checkout-mode").value = "selected" } else { t.value = t.value.replace(e + ",", ""), o.innerHTML = (parseFloat(o.innerHTML.trim()) - l * a).toFixed(2); var s = !1, c = document.querySelectorAll(".product-checkbox"); for (i = 0; i < c.length; i++)if (c[i].checked) { s = !0; break } s ? document.querySelector(".checkout-mode").value = "selected" : (document.querySelector(".checkout-btn").setAttribute("disabled", ""), document.querySelector(".checkout-mode").value = "none"), document.querySelector(".select-all").checked = !1 } } function selectAll() { let e = document.querySelector(".select-all"); var r = document.querySelectorAll(".product-checkbox"), t = document.querySelector(".checkout-pd-ids"), l = document.querySelector(".total-price"); if (e.checked) { var a = "all", o = ""; r.forEach(function e(r) { if ("out-of-stock" == r.value) a = "selected"; else { var t = r.parentElement.parentElement, n = parseFloat(t.querySelector(".pd-price-span").innerHTML.trim()), c = parseInt(t.querySelector(".input-number").value); l.innerHTML = (parseFloat(l.innerHTML.trim()) + n * c).toFixed(2), r.checked = !0, o = o + r.value + "," } }), "selected" == a && (t.value = o), 0 != r.length && (document.querySelector(".checkout-btn").removeAttribute("disabled"), document.querySelector(".checkout-mode").value = a) } else t.value = "", r.forEach(function e(r) { r.checked = !1 }), l.innerHTML = "0.00", document.querySelector(".checkout-btn").setAttribute("disabled", ""), document.querySelector(".checkout-mode").value = "none" } function checkOutCart() { let e = document.querySelector(".select-all"); if (e.checked) try { document.querySelector(".out-of-stock-warning") ? document.querySelector(".checkout-mode").value = "selected" : document.querySelector(".checkout-mode").value = "all" } catch { document.querySelector(".checkout-mode").value = "all" } else document.querySelector(".checkout-mode").value = "selected"; document.querySelector(".checkout-form").submit() } function profileEditPassword() { let e = document.querySelector(".password"), r = document.querySelector(".confirm-password"); /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,255}$/.test(e.value) ? e.value != r.value ? (document.querySelector(".password-danger").style.display = "none", document.querySelector(".confirm-password-danger").style.display = "block", document.querySelector(".password-save-btn").setAttribute("disabled", "")) : (document.querySelector(".password-danger").style.display = "none", document.querySelector(".confirm-password-danger").style.display = "none", document.querySelector(".password-save-btn").removeAttribute("disabled")) : (document.querySelector(".password-danger").style.display = "block", document.querySelector(".password-save-btn").setAttribute("disabled", "")) } function profileConfirmPassword() { let e = document.querySelector(".password"), r = document.querySelector(".confirm-password"); e.value != r.value ? (document.querySelector(".confirm-password-danger").style.display = "block", document.querySelector(".password-save-btn").setAttribute("disabled", "")) : (document.querySelector(".confirm-password-danger").style.display = "none", "none" == document.querySelector(".password-danger").style.display && document.querySelector(".password-save-btn").removeAttribute("disabled")) } function profileSavePassword() { let e = document.querySelector(".old-password"), r = document.querySelector(".new-password"); fetch("/me/update/password", { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: new URLSearchParams({ "old-password": e.value, "new-password": r.value }) }).then(e => e.text()).then(e => { "wrong password" == e ? customAlert("Old password is not correct.", "alert-warning") : customAlert("New password saved!", "alert-success") }) } function removeDiacritics(e) { return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") } function doFilter(e, r) { var t = e.map(function (e) { return { target: fuzzysort.prepare(removeDiacritics(e.textContent || e.innerText)), el: e } }), l = fuzzysort.go(r, t, { key: "target" }); e.forEach(function (e) { e.style.display = "none" }), l.forEach(function (e) { e.obj.el.style.display = "" }) } function filterCountry() { var e = document.querySelector(".country"); doFilter(Array.from(document.querySelector(".country-dropdown").getElementsByTagName("a")), e.value) } function filterNumberCode() { var e = document.querySelector(".phone_number_code"); doFilter(Array.from(document.querySelector(".number-code-dropdown").getElementsByTagName("a")), e.value) } function filterState() { var e = document.querySelector(".state"); doFilter(Array.from(document.querySelector(".state-dropdown").getElementsByTagName("a")), e.value) } function choseState(e) { document.querySelector(".state-btn").innerHTML = e, document.querySelector(".state_input").value = e } function addAddress() { var e = document.querySelector(".country_input"), r = document.querySelector(".phone_number_code_input"), t = document.querySelector(".state_input"), l = document.querySelector(".phone-number-input"), a = document.querySelector(".address-input"), o = document.querySelector(".city-input"), n = document.querySelector(".postal-code-input"); "Country" == e.value ? customAlert("Please select country.", "alert-warning") : "Code" == r.value ? customAlert("Please select phone number code.", "alert-warning") : "" == l.value.trim() ? customAlert("Please enter your phone number.", "alert-warning") : "" == a.value.trim() ? customAlert("Please enter your address.", "alert-warning") : "" == o.value.trim() ? customAlert("Please enter your city.", "alert-warning") : "State" == t.value ? customAlert("Please select state.", "alert-warning") : "" == n.value.trim() ? customAlert("Please enter your postal code.", "alert-warning") : document.querySelector(".add-address-form").submit() } function editCardNumber(e) { e.value = e.value.replace(/\D+/g, ""); var r = e.value.replace(/\s+/g, "").replace(/(\d{4})/g, "$1 ").trim(); e.value = r; var t = document.querySelector(".add-card-btn"), l = document.querySelector(".card_type"), a = document.querySelector(".visa-logo"), o = document.querySelector(".mastercard-logo"), n = document.querySelector(".wrong-card-alert"); "4" == r.charAt(0) ? (a.classList.add("border"), a.classList.add("border-primary"), o.classList.remove("border"), o.classList.remove("border-primary"), l.value = "VISA", t.removeAttribute("disabled"), n.classList.add("d-none")) : "5" == r.charAt(0) ? (o.classList.add("border"), o.classList.add("border-primary"), a.classList.remove("border"), a.classList.remove("border-primary"), l.value = "MC", t.removeAttribute("disabled"), n.classList.add("d-none")) : (o.classList.remove("border"), o.classList.remove("border-primary"), a.classList.remove("border"), a.classList.remove("border-primary"), l.value = "", t.setAttribute("disabled", ""), n.classList.remove("d-none")) } function editExpireDate(e) { e.value = e.value.replace(/\D+/g, ""), parseInt(e.value.charAt(0)) > 1 ? e.value = "0" + e.value : 1 == parseInt(e.value.charAt(0)) && parseInt(e.value.charAt(1)) > 2 && (e.value = e.value.slice(0, -1)), e.value.length >= 2 && (e.value = e.value.slice(0, 2) + "/" + e.value.slice(2), 2 > parseInt(e.value.charAt(3)) ? e.value = e.value.slice(0, -1) : 4 > parseInt(e.value.charAt(4)) && (e.value = e.value.slice(0, -1))), /^(0[1-9]|1[0-2])\/\d{2}$/.test(e.value) ? (document.querySelector(".add-card-btn").removeAttribute("disabled"), document.querySelector(".wrong-date-alert").classList.add("d-none")) : (document.querySelector(".add-card-btn").setAttribute("disabled", ""), document.querySelector(".wrong-date-alert").classList.remove("d-none")) } function preventFirstSpace(e) { " " == e.value.charAt(0) && (e.value = e.value.slice(0, -1)) } function filterCategory(e) { if (e.checked) { if (document.querySelectorAll(".category-checkbox").forEach(function r(t) { t.value != e.value && (t.checked = !1) }), window.location.href.includes("search=")) { var r = window.location.href.split("?")[1], t = new URLSearchParams(r), l = t.get("search"); window.location.href = "?filter=" + e.value + "&search=" + l } else window.location.href = "?filter=" + e.value } else if (window.location.href.includes("search=")) { var r = window.location.href.split("?")[1], t = new URLSearchParams(r), l = t.get("search"); window.location.href = "?search=" + l } else window.location.href = "/products" } function filterProductPrice(e, r) { if (window.location.href.includes("filter=") || window.location.href.includes("search=")) { if (0 == e && 0 == r) { var t = document.querySelectorAll(".pd-card"); t.forEach(function e(r) { r.style.display = "block" }) } else { var t = document.querySelectorAll(".pd-card"); t.forEach(function t(l) { var a = parseFloat(l.querySelector(".card-price").innerHTML.trim().replace("$", "")); a < e || a > r ? l.style.display = "none" : l.style.display = "block" }) } } } function editMinPrice(e) { var r = parseInt(e.value); document.querySelectorAll(".min-price-txt").forEach(function e(t) { t.innerHTML = "$" + r }), filterProductPrice(r, parseInt(document.querySelector(".max-price").value)) } function editMaxPrice(e) { var r = parseInt(e.value); document.querySelectorAll(".max-price-txt").forEach(function e(t) { t.innerHTML = "$" + r }), filterProductPrice(parseInt(document.querySelector(".min-price").value), r) } function resetFilter() { window.location.href = "/products" } function submitFilterPrice() { var e = parseInt(document.querySelector(".min-price").value), r = parseInt(document.querySelector(".max-price").value); if (window.location.href.includes("search=")) { var t = window.location.href.split("?")[1], l = new URLSearchParams(t).get("search"); window.location.href = "?filter=price&min=" + e + "&max=" + r + "&search=" + l } else window.location.href = "?filter=price&min=" + e + "&max=" + r } function handleKeyPress(e, r, t = !1) { "Enter" === e.key && ("search" == r ? submitSearch(t) : "auth" == r && signIn()) } function submitSearch(e = !1) { if (e) var r = document.querySelector(".search-input-mobile"); else var r = document.querySelector(".search-input"); if ("" == r.value.trim()) { customAlert("Please enter a search query.", "alert-warning"); return } if (window.location.pathname.includes("/products")) { if (window.location.href.includes("filter=")) { var t = window.location.href.split("?")[1], l = new URLSearchParams(t), a = l.get("filter"); if ("price" == a) { var o = l.get("min"), n = l.get("max"); window.location.href = "?filter=" + a + "&min=" + o + "&max=" + n + "&search=" + r.value } else window.location.href = "?filter=" + a + "&search=" + r.value } else window.location.href = "?search=" + r.value } else window.location.href = "/products?search=" + r.value } function clearSearch(e) { if ("" === e.target.value) { if (window.location.href.includes("filter=")) { var r = window.location.href.split("?")[1], t = new URLSearchParams(r), l = t.get("filter"); if ("price" == l) { var a = t.get("min"), o = t.get("max"); window.location.href = "?filter=" + l + "&min=" + a + "&max=" + o } else window.location.href = "?filter=" + l } else window.location.href = "/products" } } function editCategory(e) { "other" == e.value && document.querySelector(".pd-category").removeAttribute("disabled") } function removeImg(e) { e.remove(); let r = parseInt(document.querySelector(".img-range").value); document.querySelector(".img-range").value = r - 1; var t = document.querySelector(".preview-img").querySelectorAll(".col-2"); for (i = 0; i < t.length; i++)t[i].querySelector(".img-input-hidden").name = "preview-img-" + i } function addImg(e) { var r = document.querySelector(".preview-img"), t = document.createElement("div"); t.classList.add("col-2"), t.classList.add("d-flex"), t.classList.add("justify-content-center"), t.classList.add("align-items-center"), t.style.position = "relative"; var l = document.createElement("button"); l.innerHTML = "X", l.classList.add("btn"), l.classList.add("btn-primary"), l.classList.add("del-col-btn"), l.setAttribute("onclick", "removeImg(" + t + ")"), t.appendChild(l); var a = document.createElement("img"); a.src = URL.createObjectURL(e.files[0]), a.setAttribute("alt", "preview image"), a.classList.add("img-fluid"), a.classList.add("rounded"); var o = document.createElement("input"); o.classList.add("d-none"), o.classList.add("img-input-hidden"), o.type = "file", o.name = "preview-img-" + r.childElementCount, o.files = e.files, document.querySelector(".img-range").value = r.childElementCount + 1, t.appendChild(a), t.appendChild(o), r.appendChild(t) } function editAvatar(e) { document.querySelector(".avatar-img").src = URL.createObjectURL(e.files[0]) } function copyURL() { "false" == document.querySelector(".sharing").value ? fetch("/wishlist/share/true", { method: "POST" }).then(() => { location.reload(), navigator.clipboard.writeText(window.location.href), customAlert("URL copied to clipboard!", "alert-success") }).catch(e => console.error(e)) : (navigator.clipboard.writeText(window.location.href), customAlert("URL copied to clipboard!", "alert-success")) } function toggleReview(e) { var r = e.querySelector(".current"); "off" == r.value ? (r.value = "on", e.querySelector(".icon").innerHTML = '<i class="bi bi-chevron-up"></i>') : (r.value = "off", e.querySelector(".icon").innerHTML = '<i class="bi bi-chevron-down"></i>') } function placeOrderBtn(e) { var r, t = e.querySelector(".box"), l = e.querySelector(".truck"), a = e.parentElement, o = new FormData(a); Promise.all([fetch(a.action, { method: a.method, body: o }), new Promise(function (r) { e.classList.contains("done") ? (e.classList.remove("animation", "done"), gsap.set(l, { x: 4 }), gsap.set(e, { "--progress": 0, "--hx": 0, "--bx": 0, "--box-s": .5, "--box-o": 0, "--truck-y": 0, "--truck-y-n": -26 }), gsap.set(t, { x: -24, y: -6 })) : e.classList.contains("animation") || (e.classList.add("animation"), gsap.to(e, { "--box-s": 1, "--box-o": 1, duration: .3, delay: .5 }), gsap.to(t, { x: 0, duration: .4, delay: .7 }), gsap.to(e, { "--hx": -5, "--bx": 50, duration: .18, delay: .92 }), gsap.to(t, { y: 0, duration: .1, delay: 1.15 }), gsap.set(e, { "--truck-y": 0, "--truck-y-n": -26 }), gsap.to(e, { "--truck-y": 1, "--truck-y-n": -25, duration: .2, delay: 1.25, onComplete() { gsap.timeline({ onComplete() { e.classList.add("done") } }).to(l, { x: 0, duration: .4 }).to(l, { x: 40, duration: 1 }).to(l, { x: 20, duration: .6 }).to(l, { x: 96, duration: .4 }), gsap.to(e, { "--progress": 1, duration: 2.4, ease: "power2.in", onComplete() { setTimeout(function () { r() }, 1250) } }) } })) })]).then(function (e) { var r = e[0]; r.ok && r.json().then(function (e) { window.location.href = e.redirectUrl }) }) } function updateAccount(e) { let r = document.getElementById("floatingUsername-" + e); if (r.value.length < 4 || r.value.length > 25 || !/^[a-zA-Z0-9]+$/.test(r.value)) { customAlert("Username must be between 4 and 25 characters long and can only contain letters and numbers.", "alert-warning"); return } let t = document.getElementById("floatingPassword-" + e); if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,255}$/.test(t.value)) { customAlert("Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.", "alert-warning"); return } r.parentElement.parentElement.parentElement.parentElement.submit() } window.onscroll = function () { var e = document.querySelector(".navbar"); window.scrollY > 75 ? e.classList.add("navbar-scrolled") : e.classList.remove("navbar-scrolled") }, window.onload = function () { if (window.location.href.includes("filter=price")) { var e, r = window.location.href.split("?")[1], t = new URLSearchParams(r); filterProductPrice(t.get("min"), t.get("max")) } else if (window.location.href.includes("search=")) { var r = window.location.href.split("?")[1], t = new URLSearchParams(r), l = t.get("search"); document.querySelector(".search-input").value = l, document.querySelector(".search-input-mobile").value = l } else if (window.location.href.includes("/checkout")) { var a = document.querySelector(".no-address-btn"), o = document.querySelector(".no-card-btn"); null == a && null == o && document.querySelector(".place-order-btn").removeAttribute("disabled") } else if (window.location.href.includes("/product/")) { var n = document.getElementById("slider-container"); if (document.getElementsByClassName("slider-image-img").length <= 4) n.style.overflowX = "hidden"; else { var c = 0; setInterval(function e() { c < n.scrollWidth - n.clientWidth ? c += n.clientWidth / 4 : c = 0, n.scrollTo({ top: 0, left: c, behavior: "smooth" }) }, 2500) } } if (window.innerWidth < 576) { var s = document.querySelector(".search-mobile").querySelector(".dropdown-menu"); s.classList.remove("dropdown-menu-center"), s.classList.add("dropdown-menu-start"), s.setAttribute("style", "width:300px") } };